@model IEnumerable<MovieWebsite.Application.Models.VMs.GenreVM.GenreVM>

@{
    ViewData["Title"] = "ListGenres";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .table-hover tbody tr:hover {
        background-color: #f8f9fa;
        transition: background-color 0.3s ease;
    }

    .btn-primary {
        background-color: #007bff;
        border: none;
    }

    .btn-danger {
        background-color: #dc3545;
        border: none;
    }

    .table {
        border-radius: 8px;
        overflow: hidden;
    }
</style>
<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="text-primary fw-bold">Genre List</h1>
        <a asp-action="Create" class="btn btn-success shadow-lg">
            <i class="bi bi-plus-circle"></i> Create New Genre
        </a>
    </div>

    <div class="table-responsive">
        <table class="table table-hover align-middle shadow-sm rounded">
            <thead class="table-dark">
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Name</th>
                    <th scope="col">Description</th>
                    <th scope="col" class="text-center">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="bg-light">
                        <td class="fw-bold">@Html.DisplayFor(modelItem => item.Id)</td>
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.Description)</td>
                        <td class="text-center">
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-primary me-2 shadow">
                                <i class="bi bi-pencil"></i> Edit
                            </a>
                            <button class="btn btn-sm btn-danger shadow delete-button" data-id="@item.Id">
                                <i class="bi bi-trash"></i> Delete
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">Delete Genre</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p class="fs-5">Are you sure you want to delete this genre?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                <a id="confirmDeleteButton" class="btn btn-danger" href="#">Delete</a>
            </div>
        </div>
    </div>
</div>

<!-- Success Notification -->
<div id="successNotification" class="alert alert-success d-none position-fixed bottom-0 end-0 m-4" role="alert">
    Genre has been successfully deleted!
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const deleteButtons = document.querySelectorAll('.delete-button');
            const confirmDeleteButton = document.getElementById('confirmDeleteButton');
            const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            const successNotification = document.getElementById('successNotification');

            deleteButtons.forEach(button => {
                button.addEventListener('click', function () {
                    const id = this.getAttribute('data-id');
                    confirmDeleteButton.href = `/Admin/Genre/Delete/${id}`;
                    deleteModal.show();
                });
            });

            confirmDeleteButton.addEventListener('click', function (e) {
                e.preventDefault();
                const deleteUrl = this.href;

                fetch(deleteUrl, {
                    method: 'POST',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest',
                        'Content-Type': 'application/json'
                    }
                }).then(response => {
                    if (response.ok) {
                        deleteModal.hide();
                        successNotification.classList.remove('d-none');

                        setTimeout(() => {
                            successNotification.classList.add('d-none');
                            location.reload();
                        }, 2000);
                    } else {
                        alert('Error deleting genre. Please try again.');
                    }
                }).catch(error => {
                    console.error('Error:', error);
                });
            });
        });
    </script>
}
