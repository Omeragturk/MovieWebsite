@model MovieWebsite.Application.Models.VMs.FilmVMs.FilmDetailVM

@{
    ViewData["Title"] = "Film Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="card shadow-lg">
        <img class="card-img-top rounded" src="@Model.ImagePath" alt="@Model.Title" />
        <div class="card-body">
            <h2 class="card-title text-center text-primary">@Model.Title</h2>
            <p class="card-text">@Model.Description</p>

            <div class="d-flex justify-content-between align-items-center mt-4">
                <div class="d-flex gap-3">
                    <!-- Like Button -->
                    <form asp-area="Admin" asp-controller="UserFilmLike" asp-action="Like" method="post" class="like-form">
                        <input type="hidden" name="filmId" value="@Model.FilmId" />
                        <button type="submit"
                                class="btn like-btn shadow-lg d-flex align-items-center rounded-circle @(Model.Liked ? "active-like" : "")"
                                title="Like">
                            <i class="fa-solid fa-thumbs-up fa-xl"></i>
                        </button>
                    </form>

                    <!-- Dislike Button -->
                    <form asp-area="Admin" asp-controller="UserFilmLike" asp-action="Dislike" method="post" class="dislike-form">
                        <input type="hidden" name="filmId" value="@Model.FilmId" />
                        <button type="submit"
                                class="btn dislike-btn shadow-lg d-flex align-items-center rounded-circle @(Model.Disliked ? "active-dislike" : "")"
                                title="Dislike">
                            <i class="fa-solid fa-thumbs-down fa-xl"></i>
                        </button>
                    </form>
                </div>

                <a href="@Url.Action("Index", "Home")" class="btn btn-primary">
                    <i class="fa-solid fa-arrow-left"></i> Back to List
                </a>
            </div>
        </div>
    </div>
</div>

<!-- Loader and Feedback Modal -->
<div class="modal fade" id="feedbackModal" tabindex="-1" aria-labelledby="feedbackModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content text-center">
            <!-- Loader with creative design -->
            <div id="loader" class="p-4">
                <div class="film-reel">
                    <div class="reel-circle"></div>
                    <div class="reel-circle"></div>
                    <div class="reel-strip"></div>
                </div>
                <p class="mt-3 text-primary">Lights, Camera, Action! 🎥</p>
            </div>
            <div id="feedbackMessageContainer" class="d-none p-4">
                <i id="feedbackIcon" class="fa-solid fa-star text-warning fa-3x"></i>
                <h5 class="mt-3" id="feedbackMessage"></h5>
            </div>
            <button type="button" class="btn btn-primary mt-3" data-bs-dismiss="modal">OK</button>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        document.querySelectorAll(".like-form, .dislike-form").forEach(form => {
            form.addEventListener("submit", function (event) {
                event.preventDefault();

                const formData = new FormData(this);
                const actionUrl = this.action;
                const isLike = this.classList.contains("like-form");

                const feedbackModal = new bootstrap.Modal(document.getElementById("feedbackModal"));
                const loader = document.getElementById("loader");
                const feedbackMessageContainer = document.getElementById("feedbackMessageContainer");
                const feedbackMessage = document.getElementById("feedbackMessage");
                const feedbackIcon = document.getElementById("feedbackIcon");

                // Show loader and modal
                loader.classList.remove("d-none");
                feedbackMessageContainer.classList.add("d-none");
                feedbackModal.show();

                fetch(actionUrl, {
                    method: "POST",
                    body: formData
                })
                    .then(response => {
                        if (response.ok) {
                            return response.text();
                        } else {
                            throw new Error("Failed to process the request.");
                        }
                    })
                    .then(() => {
                        setTimeout(() => {
                            
                            loader.classList.add("d-none");
                            feedbackMessageContainer.classList.remove("d-none");

                            if (isLike) {
                                feedbackMessage.textContent = "You gave a thumbs up! 🎬";
                                feedbackIcon.className = "fa-solid fa-thumbs-up text-success fa-3x";
                            } else {
                                feedbackMessage.textContent = "You gave a thumbs down! 📽️";
                                feedbackIcon.className = "fa-solid fa-thumbs-down text-danger fa-3x";
                            }
                        }, 2000);
                    })
                    .catch(error => {
                        console.error("Error:", error);
                        alert("An error occurred while processing your request.");
                    });
            });
        });
    </script>
}
